user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
	include         mime.types;
    default_type    application/octet-stream;
	client_max_body_size 1M;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

	upstream cache {
		server varnish:80;
	}

	upstream ipfs {
		server ipfs:8080;
	}

    # public http server redirects to https and
    # serves /.well-known/
	server {
		listen      80;
		server_name benlittle.dev benlittledev.com;
		location /.well-known/acme-challenge/ {
            root      /var/www/certbot;
			try_files $uri =404;
		}    
		location / {
			return 302 https://$server_name$request_uri;
		}    
	}

    # public server proxies for the cache, which
    # just points everything back at nginx:8080
	server {
		listen      443 ssl;
		server_name benlittle.dev benlittledev.com;
        include     ssl_params.conf;
		location / {
			include     cache_options.conf;
			proxy_pass  http://cache;
		}
	}

	server {
		listen      8081;
		server_name localhost;
		location /.well-known/acme-challenge/ {
            root      /var/www/certbot;
			try_files $uri =404;
		}    
		location / {
			return 302 https://$server_name:8443$request_uri;
		}    
	}

	server {
		listen      8443 ssl;
		server_name localhost;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_session_timeout 60m;
        ssl_session_tickets off;

        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        ssl_session_cache   shared:all_sites_SSL:10m;
        ssl_certificate     /etc/ssl/localhost.crt;
        ssl_certificate_key /etc/ssl/localhost.pem;
        ssl_dhparam         /etc/ssl/dh.pem;

		location / {
			include     cache_options.conf;
			proxy_pass  http://cache;
		}

	}

    # internal server serves static content
	server {
		listen      8080;
		server_name benlittle.dev benlittledev.com localhost;
		index       index.html;
		location / {
			rewrite     ^(.*)$ /ipfs/QmabU9FFRNGYcgQEGs6FJzyqQ34oCBQvQ1nUDRJgNo7zVF/$1;
			proxy_pass  http://ipfs;
		}
	}

}
